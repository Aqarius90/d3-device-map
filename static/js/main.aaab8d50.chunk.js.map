{"version":3,"sources":["srbijalv1.geojson","Map.js","windowSize.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Map","choro","w","h","DB","useEffect","d3","mapa","then","d","remove","selectAll","path","fitSize","append","data","features","enter","attr","properties","name","color","domain","map","e","sat","range","console","log","find","centroids","filter","push","coords","centroid","forEach","label","text","x","value","on","html","MMG","CT","MRI","drawPopup","d3div","useRef","className","width","height","ref","getWindowDimensions","window","innerWidth","innerHeight","App","useState","showOwn","setOwn","showDev","setDev","showTime","setTime","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","WindowSize","onClick","foo","includes","pullData","bar","Beograd","Jugoistok","Vojvodina","Centrozapad","pop","Kosovo","public","private","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aaab8d50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/srbijalv1.fd101659.geojson\";","import React, { useRef, useEffect } from \"react\";\r\n//import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport mapa from \"./srbijalv1.geojson\";\r\nimport DB from \"./DB.json\";\r\n\r\nfunction Map({ choro, w, h, DB }) {\r\n  /*data setup for choropleth*/\r\n\r\n  /****drawing****/\r\n  useEffect(() => {\r\n    /*load data*/\r\n    d3.json(mapa).then(d => {\r\n      /*data loaded*/\r\n\r\n      /*cleanup before redraw*/\r\n      d3.select(\"g\").remove();\r\n      d3.select(\"svg\")\r\n        .selectAll(\"foreignObject\")\r\n        .remove();\r\n      d3.selectAll(\"text\").remove();\r\n\r\n      /*draw map*/\r\n      let path = d3.geoPath(d3.geoEquirectangular().fitSize([w, h], d));\r\n      d3.select(\"svg\")\r\n        .append(\"g\")\r\n        .selectAll(\"path\")\r\n        .data(d.features)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"d\", path)\r\n        .attr(\"name\", d => {\r\n          return d.properties.name;\r\n        })\r\n        .attr(\"fill\", function(d) {\r\n          let color = d3\r\n            .scaleLinear()\r\n            .domain(\r\n              //context. kill me\r\n              [d3.min(choro.map(e => e.sat)), d3.max(choro.map(e => e.sat))]\r\n            )\r\n            .range([\"#e5f5e0\", \"#a1d99b\"]);\r\n\r\n          if (d.properties.name === \"Kosovo\") {\r\n            return \"#666666\";\r\n          }\r\n          console.log(d3.min(choro.map(e => e.sat)));\r\n          console.log(choro.find(e => e.name === d.properties.name).sat);\r\n          console.log(color(choro.find(e => e.name === d.properties.name).sat));\r\n          return color(choro.find(e => e.name === d.properties.name).sat);\r\n        });\r\n\r\n      /*get centroids*/\r\n      let centroids = [];\r\n      d3.select(\"svg\")\r\n        .selectAll(\"path\")\r\n        .filter(d => {\r\n          centroids.push({\r\n            name: d.properties.name,\r\n            coords: path.centroid(d)\r\n          });\r\n          return false;\r\n        });\r\n\r\n      /*map text*/\r\n      centroids.forEach(e => {\r\n        let label = d3\r\n          .select(\"svg\")\r\n          .append(\"text\")\r\n          .attr(\"transform\", d => {\r\n            return \"translate(\" + [e.coords[0], e.coords[1]] + \")\";\r\n          })\r\n          .attr(\"text-anchor\", \"middle\");\r\n        if (e.name === \"Kosovo\") {\r\n          label.text(\"no data\");\r\n        } else {\r\n          label.text(choro.find(x => x.name === e.name).value);\r\n        }\r\n      });\r\n\r\n      /*eventhandlers*/\r\n      d3.select(\"g\")\r\n        .selectAll(\"path\")\r\n        .on(\"click\", d => drawPopup(d, centroids));\r\n\r\n      /*popup draw*/\r\n      function drawPopup(d, centroids) {\r\n        //let xy = centroids.filter(e => {\r\n        //  return e.name === d.properties.name;\r\n        //})[0].coords;\r\n\r\n        d3.select(\"svg\")\r\n          .append(\"foreignObject\")\r\n          .attr(\"width\", 300)\r\n          .attr(\"height\", 400)\r\n          .attr(\"x\", w - 300)\r\n          .attr(\"y\", 0)\r\n          //.attr(\"x\", xy[0])\r\n          //.attr(\"y\", xy[1])\r\n          .append(\"xhtml:body\")\r\n          .append(\"div\")\r\n          .attr(\"class\", \"tool w-100\")\r\n          .html(\r\n            \"<h5>\" +\r\n              DB[d.properties.name].name +\r\n              \"</h5> <table style='width:100%'<tr><th></th><th>Javno</th><th>Privatno</th></tr><tr><td>Mamogram</td><td>\" +\r\n              DB[d.properties.name].MMG[0] +\r\n              \"</td><td>\" +\r\n              DB[d.properties.name].MMG[1] +\r\n              \"</td></tr><tr><td>CT</td><td>\" +\r\n              DB[d.properties.name].CT[0] +\r\n              \"</td><td>\" +\r\n              DB[d.properties.name].CT[1] +\r\n              \"</td></tr><tr><td>MRI</td><td>\" +\r\n              DB[d.properties.name].MRI[0] +\r\n              \"</td><td>\" +\r\n              DB[d.properties.name].MRI[1] +\r\n              \"</td></tr></table>\"\r\n          );\r\n      }\r\n    });\r\n  });\r\n\r\n  const d3div = useRef(null);\r\n  return <svg className=\"d3div\" width={w} height={h} ref={d3div} />;\r\n}\r\n\r\nexport default Map;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function WindowSize() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Map from \"./Map.js\";\nimport DB from \"./DB.json\";\nimport WindowSize from \"./windowSize.js\";\n\nfunction App() {\n  const [showOwn, setOwn] = useState(\"both\"); //public/private/both\n  const [showDev, setDev] = useState(\"Sve\");\n  const [showTime, setTime] = useState(\"now\"); //now/after\n\n  /*for the map*/\n  function choro() {\n    let foo = pullData();\n    let bar = [\n      { name: \"Beograd\", value: 0, sat: 0 },\n      { name: \"Jugoistok\", value: 0, sat: 0 },\n      { name: \"Vojvodina\", value: 0, sat: 0 },\n      { name: \"Centrozapad\", value: 0, sat: 0 }\n    ];\n    foo.forEach(e => {\n      bar[0].value += e.Beograd;\n      bar[1].value += e.Jugoistok;\n      bar[2].value += e.Vojvodina;\n      bar[3].value += e.Centrozapad;\n    });\n    bar[0].sat = DB.pop.Beograd / bar[0].value;\n    bar[1].sat = DB.pop.Jugoistok / bar[1].value;\n    bar[2].sat = DB.pop.Vojvodina / bar[2].value;\n    bar[3].sat = DB.pop.Centrozapad / bar[3].value;\n    return bar;\n  }\n  function pullData() {\n    if ([\"now\", \"after\"].includes(showTime)) {\n      if ([\"public\", \"private\"].includes(showOwn)) {\n        if ([\"MMG\", \"CT\", \"MRI\"].includes(showDev)) {\n          return [DB[showTime][showOwn][showDev]];\n        } else {\n          return [\n            DB[showTime][showOwn].MMG,\n            DB[showTime][showOwn].CT,\n            DB[showTime][showOwn].MRI\n          ];\n        }\n      } else {\n        if ([\"MMG\", \"CT\", \"MRI\"].includes(showDev)) {\n          return [\n            DB[showTime][\"public\"][showDev],\n            DB[showTime][\"private\"][showDev]\n          ];\n        } else {\n          return [\n            DB[showTime][\"public\"].MMG,\n            DB[showTime][\"public\"].CT,\n            DB[showTime][\"public\"].MRI,\n            DB[showTime][\"private\"].MMG,\n            DB[showTime][\"private\"].CT,\n            DB[showTime][\"private\"].MRI\n          ];\n        }\n      }\n    }\n  }\n\n  /*for the popup*/\n  function formatData() {\n    return {\n      Kosovo: {\n        name: \"Kosovo\",\n        MMG: [\"no data\", \"no data\"],\n        CT: [\"no data\", \"no data\"],\n        MRI: [\"no data\", \"no data\"]\n      },\n      Beograd: {\n        name: \"Beograd\",\n        MMG: [\n          DB[showTime].public.MMG.Beograd,\n          DB[showTime].private.MMG.Beograd\n        ],\n        CT: [DB[showTime].public.CT.Beograd, DB[showTime].private.CT.Beograd],\n        MRI: [DB[showTime].public.MRI.Beograd, DB[showTime].private.MRI.Beograd]\n      },\n      Jugoistok: {\n        name: \"Južna i istočna Srbija\",\n        MMG: [\n          DB[showTime].public.MMG.Jugoistok,\n          DB[showTime].private.MMG.Jugoistok\n        ],\n        CT: [\n          DB[showTime].public.CT.Jugoistok,\n          DB[showTime].private.CT.Jugoistok\n        ],\n        MRI: [\n          DB[showTime].public.MRI.Jugoistok,\n          DB[showTime].private.MRI.Jugoistok\n        ]\n      },\n      Vojvodina: {\n        name: \"Vojvodina\",\n        MMG: [\n          DB[showTime].public.MMG.Vojvodina,\n          DB[showTime].private.MMG.Vojvodina\n        ],\n        CT: [\n          DB[showTime].public.CT.Vojvodina,\n          DB[showTime].private.CT.Vojvodina\n        ],\n        MRI: [\n          DB[showTime].public.MRI.Vojvodina,\n          DB[showTime].private.MRI.Vojvodina\n        ]\n      },\n      Centrozapad: {\n        name: \"Šumadija i zapadna Srbija\",\n        MMG: [\n          DB[showTime].public.MMG.Centrozapad,\n          DB[showTime].private.MMG.Centrozapad\n        ],\n        CT: [\n          DB[showTime].public.CT.Centrozapad,\n          DB[showTime].private.CT.Centrozapad\n        ],\n        MRI: [\n          DB[showTime].public.MRI.Centrozapad,\n          DB[showTime].private.MRI.Centrozapad\n        ]\n      }\n    };\n  }\n\n  const { height, width } = WindowSize();\n  const h = width > 800 ? 800 : 200;\n  const w = width > 800 ? 800 : 200;\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid \">\n        <div className=\"header p-2\">\n          <h2>Raspored Aparata</h2>\n        </div>\n        <div className=\"row mx-auto justify-content-center\">\n          <div className=\"col-sm-12 col-lg-4 col-xl-3\">\n            <h4>Uređaji</h4>\n            <div className=\"btn-group btn-group-lg\">\n              <button\n                className={\n                  showDev === \"MMG\"\n                    ? \"btn btn-secondary active\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setDev(\"MMG\")}\n              >\n                {\" \"}\n                MMG\n              </button>\n              <button\n                className={\n                  showDev === \"CT\"\n                    ? \"btn btn-secondary active\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setDev(\"CT\")}\n              >\n                {\" \"}\n                CT\n              </button>\n              <button\n                className={\n                  showDev === \"MRI\"\n                    ? \"btn btn-secondary active\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setDev(\"MRI\")}\n              >\n                {\" \"}\n                MRI\n              </button>\n              <button\n                className={\n                  showDev === \"Sve\"\n                    ? \"btn btn-secondary active\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setDev(\"Sve\")}\n              >\n                {\" \"}\n                Sve\n              </button>\n            </div>\n          </div>\n          <div className=\"col-sm-12 col-lg-4 col-xl-3\">\n            <h4>Vlasništvo</h4>\n            <div className=\"btn-group btn-group-lg\">\n              <button\n                className={\n                  showOwn === \"public\"\n                    ? \"btn btn-secondary active\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setOwn(\"public\")}\n              >\n                {\" \"}\n                Javno\n              </button>\n              <button\n                className={\n                  showOwn === \"private\"\n                    ? \"btn btn-secondary aprivateive\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setOwn(\"private\")}\n              >\n                {\" \"}\n                Privatno\n              </button>\n              <button\n                className={\n                  showOwn === \"both\"\n                    ? \"btn btn-secondary active\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setOwn(\"both\")}\n              >\n                {\" \"}\n                Sve\n              </button>\n            </div>\n          </div>\n          <div className=\"col-sm-12 col-lg-4 col-xl-3\">\n            <h4>Stanje</h4>\n            <div className=\"btn-group btn-group-lg\">\n              <button\n                className={\n                  showTime === \"now\"\n                    ? \"btn btn-secondary active\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setTime(\"now\")}\n              >\n                {\" \"}\n                Trenutno\n              </button>\n              <button\n                className={\n                  showTime === \"after\"\n                    ? \"btn btn-secondary aprivateive\"\n                    : \"btn btn-secondary\"\n                }\n                onClick={() => setTime(\"after\")}\n              >\n                {\" \"}\n                Predloženo\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container p-4 overflow-auto\">\n        <Map choro={choro()} w={w} h={h} DB={formatData()} pop={DB.pop}></Map>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}